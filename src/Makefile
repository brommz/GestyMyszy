#############################################################################
# Makefile for building: SiecNeuronowa
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun May 27 13:41:13 2012
# Project:  SiecNeuronowa.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/lib/qt4/mkspecs/linux-g++-32 -o Makefile SiecNeuronowa.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m32 -pipe -O2 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m32 -pipe -O2 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m32 -march=i686 -mtune=atom -fasynchronous-unwind-tables -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++-32 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I.
LINK          = g++
LFLAGS        = -m32 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = WarstwaWyjsciowa.cpp \
		WarstwaWejsciowa.cpp \
		WarstwaUkryta.cpp \
		Warstwa.cpp \
		SiecNeuronowa.cpp \
		SiecDwuwarstwowa.cpp \
		NeuronZwykly.cpp \
		NeuronWyjsciowy.cpp \
		NeuronWejsciowy.cpp \
		Neuron.cpp \
		main.cpp \
		Link.cpp \
		Exception.cpp 
OBJECTS       = WarstwaWyjsciowa.o \
		WarstwaWejsciowa.o \
		WarstwaUkryta.o \
		Warstwa.o \
		SiecNeuronowa.o \
		SiecDwuwarstwowa.o \
		NeuronZwykly.o \
		NeuronWyjsciowy.o \
		NeuronWejsciowy.o \
		Neuron.o \
		main.o \
		Link.o \
		Exception.o
DIST          = /usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/qt4/mkspecs/common/g++-base.conf \
		/usr/lib/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		SiecNeuronowa.pro
QMAKE_TARGET  = SiecNeuronowa
DESTDIR       = 
TARGET        = SiecNeuronowa

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: SiecNeuronowa.pro  /usr/lib/qt4/mkspecs/linux-g++-32/qmake.conf /usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/qt4/mkspecs/common/g++-base.conf \
		/usr/lib/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/release.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++-32 -o Makefile SiecNeuronowa.pro
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/common/gcc-base.conf:
/usr/lib/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib/qt4/mkspecs/common/g++-base.conf:
/usr/lib/qt4/mkspecs/common/g++-unix.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/release.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++-32 -o Makefile SiecNeuronowa.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/SiecNeuronowa1.0.0 || $(MKDIR) .tmp/SiecNeuronowa1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/SiecNeuronowa1.0.0/ && $(COPY_FILE) --parents WarstwaWyjsciowa.h WarstwaWejsciowa.h WarstwaUkryta.h Warstwa.h SiecNeuronowa.h SiecDwuwarstwowa.h NeuronZwykly.h NeuronWyjsciowy.h NeuronWejsciowy.h Neuron.h Link.h definicje.h Exception.h .tmp/SiecNeuronowa1.0.0/ && $(COPY_FILE) --parents WarstwaWyjsciowa.cpp WarstwaWejsciowa.cpp WarstwaUkryta.cpp Warstwa.cpp SiecNeuronowa.cpp SiecDwuwarstwowa.cpp NeuronZwykly.cpp NeuronWyjsciowy.cpp NeuronWejsciowy.cpp Neuron.cpp main.cpp Link.cpp Exception.cpp .tmp/SiecNeuronowa1.0.0/ && (cd `dirname .tmp/SiecNeuronowa1.0.0` && $(TAR) SiecNeuronowa1.0.0.tar SiecNeuronowa1.0.0 && $(COMPRESS) SiecNeuronowa1.0.0.tar) && $(MOVE) `dirname .tmp/SiecNeuronowa1.0.0`/SiecNeuronowa1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/SiecNeuronowa1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

WarstwaWyjsciowa.o: WarstwaWyjsciowa.cpp WarstwaWyjsciowa.h \
		definicje.h \
		Exception.h \
		Warstwa.h \
		Neuron.h \
		Link.h \
		NeuronWyjsciowy.h \
		NeuronZwykly.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WarstwaWyjsciowa.o WarstwaWyjsciowa.cpp

WarstwaWejsciowa.o: WarstwaWejsciowa.cpp WarstwaWejsciowa.h \
		definicje.h \
		Exception.h \
		Warstwa.h \
		Neuron.h \
		Link.h \
		NeuronWejsciowy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WarstwaWejsciowa.o WarstwaWejsciowa.cpp

WarstwaUkryta.o: WarstwaUkryta.cpp WarstwaUkryta.h \
		definicje.h \
		Exception.h \
		Warstwa.h \
		Neuron.h \
		Link.h \
		NeuronZwykly.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WarstwaUkryta.o WarstwaUkryta.cpp

Warstwa.o: Warstwa.cpp Warstwa.h \
		definicje.h \
		Exception.h \
		Neuron.h \
		Link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Warstwa.o Warstwa.cpp

SiecNeuronowa.o: SiecNeuronowa.cpp SiecNeuronowa.h \
		definicje.h \
		Exception.h \
		Warstwa.h \
		Neuron.h \
		Link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SiecNeuronowa.o SiecNeuronowa.cpp

SiecDwuwarstwowa.o: SiecDwuwarstwowa.cpp SiecDwuwarstwowa.h \
		definicje.h \
		Exception.h \
		SiecNeuronowa.h \
		Warstwa.h \
		Neuron.h \
		Link.h \
		WarstwaWejsciowa.h \
		NeuronWejsciowy.h \
		WarstwaWyjsciowa.h \
		NeuronWyjsciowy.h \
		NeuronZwykly.h \
		WarstwaUkryta.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SiecDwuwarstwowa.o SiecDwuwarstwowa.cpp

NeuronZwykly.o: NeuronZwykly.cpp NeuronZwykly.h \
		definicje.h \
		Exception.h \
		Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NeuronZwykly.o NeuronZwykly.cpp

NeuronWyjsciowy.o: NeuronWyjsciowy.cpp NeuronWyjsciowy.h \
		definicje.h \
		Exception.h \
		NeuronZwykly.h \
		Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NeuronWyjsciowy.o NeuronWyjsciowy.cpp

NeuronWejsciowy.o: NeuronWejsciowy.cpp NeuronWejsciowy.h \
		definicje.h \
		Exception.h \
		Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NeuronWejsciowy.o NeuronWejsciowy.cpp

Neuron.o: Neuron.cpp Neuron.h \
		definicje.h \
		Exception.h \
		Link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Neuron.o Neuron.cpp

main.o: main.cpp SiecDwuwarstwowa.h \
		definicje.h \
		Exception.h \
		SiecNeuronowa.h \
		Warstwa.h \
		Neuron.h \
		Link.h \
		WarstwaWejsciowa.h \
		NeuronWejsciowy.h \
		WarstwaWyjsciowa.h \
		NeuronWyjsciowy.h \
		NeuronZwykly.h \
		WarstwaUkryta.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Link.o: Link.cpp Link.h \
		definicje.h \
		Exception.h \
		Neuron.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Link.o Link.cpp

Exception.o: Exception.cpp Exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Exception.o Exception.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

